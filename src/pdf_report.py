from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas
from reportlab.lib.units import inch
from reportlab.lib.utils import ImageReader
import pandas as pd

def generate_pdf_report(data_path="data/bizpulse_data.csv", output_file="output/BizPulse_Report.pdf"):
    df = pd.read_csv(data_path, parse_dates=["Date"])

    total_revenue = df['Revenue'].sum()
    avg_profit = df['Profit'].mean()
    avg_satisfaction = df['Customer_Satisfaction'].mean()

    # Create PDF canvas
    c = canvas.Canvas(output_file, pagesize=A4)
    width, height = A4

    # --- Header ---
    c.setFont("Helvetica-Bold", 20)
    c.drawString(50, height - 50, "📊 BizPulse – Business Health Report")

    c.setFont("Helvetica", 12)
    c.drawString(50, height - 80, f"Total Revenue: ${total_revenue:,.2f}")
    c.drawString(50, height - 100, f"Average Profit: ${avg_profit:,.2f}")
    c.drawString(50, height - 120, f"Avg Customer Satisfaction: {avg_satisfaction:.2f}/5")

    # --- Embed Plots ---
    charts = [
        ("output/revenue_trend_by_region.png", "Revenue Trend by Region"),
        ("output/profit_distribution_by_region.png", "Profit Distribution"),
        ("output/correlation_matrix.png", "Correlation Between Metrics"),
        ("output/iforest_anomaly_plot.png", "Anomaly Detection (Isolation Forest)")
    ]

    y = height - 160
    for img_path, title in charts:
        try:
            c.setFont("Helvetica-Bold", 12)
            c.drawString(50, y, title)
            y -= 20
            c.drawImage(ImageReader(img_path), 50, y - 200, width=500, height=200)
            y -= 220
            if y < 150:  # Start new page if space is low
                c.showPage()
                y = height - 80
        except Exception as e:
            print(f"⚠️ Could not embed image {img_path}: {e}")

    # --- Final Footer ---
    c.setFont("Helvetica-Oblique", 10)
    c.drawString(50, 30, "Generated by BizPulse | Contact: youremail@example.com")

    # Save PDF
    c.save()
    print(f"✅ PDF report saved to: {output_file}")